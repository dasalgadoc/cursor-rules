---
description: 
globs: 
alwaysApply: false
---
DDD Shared Kernel - Reglas Modulares para Cursor
# ðŸ“‹ Instrucciones de Uso 
Estas reglas estÃ¡n divididas en mÃ³dulos para evitar limitaciones de contexto. Ejecuta los comandos en orden:

generar shared kernel base java
generar shared kernel criteria java
generar shared kernel bus java
generar shared kernel infrastructure java

# ðŸŽ¯ Comandos de Uso

generar shared kernel base - Genera clases base (AggregateRoot, ValueObject, etc.)
generar shared kernel criteria - Genera patrÃ³n Criteria completo
generar shared kernel bus - Genera buses CQRS y DomainEvent
generar shared kernel infrastructure - Genera implementaciones Spring


# Ejemplo de Uso

**Entrada:**
```
"Genera el Shared Kernel completo para el proyecto"
```

**Estructura Generada:**
```
{proyecto}/src/main/java/{paquete}/shared/
â”œâ”€â”€ domain/
â”‚   â”œâ”€â”€ AggregateRoot.java
â”‚   â”œâ”€â”€ DomainError.java
â”‚   â”œâ”€â”€ Identifier.java
â”‚   â”œâ”€â”€ UuidGenerator.java
â”‚   â”œâ”€â”€ StringValueObject.java
â”‚   â”œâ”€â”€ IntValueObject.java
â”‚   â”œâ”€â”€ Monitoring.java
â”‚   â”œâ”€â”€ criteria/
â”‚   â”‚   â”œâ”€â”€ Criteria.java
â”‚   â”‚   â”œâ”€â”€ Filters.java
â”‚   â”‚   â”œâ”€â”€ Filter.java
â”‚   â”‚   â”œâ”€â”€ FilterField.java
â”‚   â”‚   â”œâ”€â”€ FilterOperator.java
â”‚   â”‚   â”œâ”€â”€ FilterValue.java
â”‚   â”‚   â”œâ”€â”€ Order.java
â”‚   â”‚   â”œâ”€â”€ OrderBy.java
â”‚   â”‚   â””â”€â”€ OrderType.java
â”‚   â””â”€â”€ bus/
â”‚       â”œâ”€â”€ command/
â”‚       â”‚   â”œâ”€â”€ CommandBus.java
â”‚       â”‚   â”œâ”€â”€ Command.java
â”‚       â”‚   â”œâ”€â”€ CommandHandler.java
â”‚       â”‚   â”œâ”€â”€ CommandNotRegisteredError.java
â”‚       â”‚   â””â”€â”€ CommandHandlerExecutionError.java
â”‚       â”œâ”€â”€ query/
â”‚       â”‚   â”œâ”€â”€ QueryBus.java
â”‚       â”‚   â”œâ”€â”€ Query.java
â”‚       â”‚   â”œâ”€â”€ QueryHandler.java
â”‚       â”‚   â”œâ”€â”€ QueryHandlerExecutionError.java
â”‚       â”‚   â”œâ”€â”€ QueryNotRegisteredError.java
â”‚       â”‚   â””â”€â”€ Response.java
â”‚       â””â”€â”€ event/
â”‚           â”œâ”€â”€ EventBus.java
â”‚           â”œâ”€â”€ DomainEventSubscriber.java
â”‚           â””â”€â”€ DomainEvent.java
â””â”€â”€ infrastructure/
    â”œâ”€â”€ JavaUuidGenerator.java
    â””â”€â”€ bus/
        â””â”€â”€ event/
            â””â”€â”€ SpringApplicationEventBus.java
```

# Consideraciones

- **Basado en CodelyTV**: Incorpora las mejores prÃ¡cticas del repositorio de referencia https://github.dev/CodelyTV/java-ddd-example
- **Genericizado**: Sin referencias especÃ­ficas a dominios particulares  
- **Production-Ready**: Optimizado para uso en producciÃ³n
- **Spring Integration**: Compatible con Spring Boot y sus convenciones
- **Type Safety**: Fuertemente tipado para prevenir errores
- **Extensible**: FÃ¡cil de extender con nuevos Value Objects y patrones
- **Testing Friendly**: DiseÃ±ado para facilitar testing unitario
